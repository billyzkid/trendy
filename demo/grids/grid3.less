.grid(@column-count: 12, @column-width: 60, @gutter-width: 20, @debug: false) {

    @debug-column-background:   rgba(0, 0, 0, 0.2);
    @debug-gutter-background:   rgba(0, 0, 0, 0.1);
    @system-width:              @column-count * (@column-width + @gutter-width) - @gutter-width * 1px;
    @total-width:               @system-width;

    .visualize() when (@debug) {
        @debug-gutter-width: @gutter-width / (@column-width + @gutter-width) * 100%;
        @gradient: left, @debug-gutter-background 0%, @debug-gutter-background @debug-gutter-width, @debug-column-background @debug-gutter-width, @debug-column-background 100%;

        background-image: -webkit-linear-gradient(@gradient);
        background-image:    -moz-linear-gradient(@gradient);
        background-image:     -ms-linear-gradient(@gradient);
        background-image:      -o-linear-gradient(@gradient);
        background-image:         linear-gradient(@gradient);
        background-size: (@column-width + @gutter-width) / @system-width * @total-width;
        background-position-x: @gutter-width / @system-width * @total-width * -1;
        background-repeat: repeat;
    }

    .row() {
        width: @total-width + @gutter-width / @system-width * @total-width;
        margin-left: @gutter-width / @system-width * @total-width * -1;
        overflow: hidden;

        &:after {
            content: "";
            display: table;
            clear: both;
        }
    }

    .column(@count: @column-count, @equal-height: false) {
        .column(@count, 0, @equal-height);
    }

    .column(@count: @column-count, @offset: 0, @equal-height: false) {
       
        .mixin1(@count) when (@count > 0) {
            width: (@count * (@column-width + @gutter-width) - @gutter-width) / @system-width * @total-width;
            margin-left: @gutter-width / @system-width * @total-width;
        }

        .mixin2(@offset) when (@offset > 0) {
            margin-left: ((@offset * (@column-width + @gutter-width) - @gutter-width) / @system-width * @total-width) + (@gutter-width / @system-width * @total-width * 2);
        }

        .mixin3(@equal-height) when (@equal-height) {
            padding-bottom: 99999px;
            margin-bottom: -99999px;
        }

        .mixin1(@count);
        .mixin2(@offset);
        .mixin3(@equal-height);

        float: left;
        overflow: hidden;
    }

    .visualize;

    width: @total-width;
}
