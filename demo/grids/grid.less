// options
@columns: 			    12;
@column-width: 		    60;
@gutter-width: 		    24;
@total-width: 		    100%;
@visual-column-color:	rgba(0, 0, 255, 0.1);
@visual-gutter-color: 	rgba(255, 255, 255, 0.01);
@visualize-grid:		true;

// variables
@column-grad:           @column-width / (@column-width + @gutter-width) * 100%;
@gutter-grad:           @gutter-width / (@column-width + @gutter-width) * 100%;
@gridsystem-width:      (@column-width * @columns) + (@gutter-width * @columns) * 1px;
@total-width:           @gridsystem-width;
@column-gutter-width:   @total-width * (@gutter-width / @gridsystem-width);
@p-gridsystem-width:    @gridsystem-width - @gutter-width;
@p-column-gutter-width: @total-width * (@gutter-width / @p-gridsystem-width);

.grid-container(@x: @columns, @columns: @columns) {
	.mixin(@x, @columns) {}
	.mixin(@x, @columns) when (ispixel(@total-width)) {
		.column-width(@x, @columns);
	}
	.mixin(@x: @min-width, @columns: @max-width) when (ispercentage(@total-width)) {
		@min-width: @x;
		@max-width: @columns;
		min-width: @min-width;
		max-width: @max-width;
	}
	.mixin(@x, @columns);
}

.grid(@columns: @columns) {
	.row(@columns);
	.mixin() {}
	.mixin() when (@visualize-grid = true) {	
        background-size: @total-width * ((@column-width + @gutter-width) / @gridsystem-width);
        background-image: -webkit-linear-gradient(left, @visual-gutter-color 0%, @visual-gutter-color @gutter-grad, @visual-column-color @gutter-grad, @visual-column-color @gutter-grad + @column-grad, @visual-gutter-color @gutter-grad + @column-grad);
        background-image:    -moz-linear-gradient(left, @visual-gutter-color 0%, @visual-gutter-color @gutter-grad, @visual-column-color @gutter-grad, @visual-column-color @gutter-grad + @column-grad, @visual-gutter-color @gutter-grad + @column-grad);
        background-image:     -ms-linear-gradient(left, @visual-gutter-color 0%, @visual-gutter-color @gutter-grad, @visual-column-color @gutter-grad, @visual-column-color @gutter-grad + @column-grad, @visual-gutter-color @gutter-grad + @column-grad);
        background-image:      -o-linear-gradient(left, @visual-gutter-color 0%, @visual-gutter-color @gutter-grad, @visual-column-color @gutter-grad, @visual-column-color @gutter-grad + @column-grad, @visual-gutter-color @gutter-grad + @column-grad);
        background-image:         linear-gradient(left, @visual-gutter-color 0%, @visual-gutter-color @gutter-grad, @visual-column-color @gutter-grad, @visual-column-color @gutter-grad + @column-grad, @visual-gutter-color @gutter-grad + @column-grad);
	}
	.mixin;
}

.row(@columns: @columns) {	
	.mixin(@columns: @columns) when (ispixel(@total-width)) {
		width: @gridsystem-width;
		margin-left: @column-gutter-width * -1;
		}
	.mixin(@columns: @columns) when (ispercentage(@total-width)) {
		width: @total-width + @p-column-gutter-width;
		margin-left: @p-column-gutter-width * -1;
	}
	.mixin(@columns);
	overflow:hidden;
	.clearfix;
}

.column(@columns: @columns) {
	float: left;
	.mixin(@columns: @columns) when (ispixel(@total-width)) {
		margin-left: @column-gutter-width;
	}
	.mixin(@columns: @columns) when (ispercentage(@total-width)) {
		margin-left: @column-gutter-width;
	}
	.mixin(@columns);
}

.column-width(@x, @columns: @columns) {
	.mixin(@x, @columns: @columns) when (ispixel(@total-width)) {
		width: (((@gutter-width + @column-width) * @x) - @gutter-width) * 1px;
	}
	.mixin(@x, @columns: @columns) when (ispercentage(@total-width)) {
		width: @total-width * ((((@gutter-width + @column-width) * @x) - @gutter-width) / @gridsystem-width);
	}
	.mixin(@x, @columns);
}

.column-height-equal(@y: 32767px) {
    padding-bottom: @y;
    margin-bottom: @y * -1;
}

.push(@offset: 1, @columns: @columns)  {
	.mixin(@offset: 1, @columns: @columns) when (ispixel(@total-width)) {
		margin-left: ((((@gutter-width + @column-width) * @offset) - @gutter-width) * 1px) + (@column-gutter-width * 2);
	}
	.mixin(@offset: 1, @columns: @columns) when (ispercentage(@total-width)) {
		margin-left: (@total-width * ((((@gutter-width + @column-width) * @offset) - @gutter-width) / @gridsystem-width)) + (@column-gutter-width * 2);
	}
	.mixin(@offset, @columns);
}

.clearfix() {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}
