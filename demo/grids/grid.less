// options
@columns: 			        12;
@column-width: 		        60;
@gutter-width: 		        24;
@total-width: 		        100%;
@visualize-grid:		    true;
@visualize-column-color:	rgba(0, 0, 255, 0.1);
@visualize-gutter-color: 	rgba(255, 255, 255, 0);

// variables
@system-width:                      (@column-width * @columns) + (@gutter-width * @columns) * 1px;
@system-width-percentage:           @system-width - @gutter-width;
@total-width:                       @system-width;
@column-gutter-width:               (@gutter-width / @system-width) * @total-width;
@column-gutter-width-percentage:    (@gutter-width / @system-width-percentage) * @total-width;

.grid-container(@x: @columns, @columns: @columns) {
	.mixin(@x, @columns) {}
	.mixin(@x, @columns) when (ispixel(@total-width)) {
		.column-width(@x, @columns);
	}
	.mixin(@min-width, @max-width) when (ispercentage(@total-width)) {
		min-width: @min-width;
		max-width: @max-width;
	}
	.mixin(@x, @columns);
}

.grid(@columns: @columns) {
	.row(@columns);
	.mixin() {}
	.mixin() when (@visualize-grid = true) {
        @gutter-percentage: @gutter-width / (@column-width + @gutter-width) * 100%;
        .linear-gradient(left~"," @visualize-gutter-color 0%~"," @visualize-gutter-color @gutter-percentage~"," @visualize-column-color @gutter-percentage~"," @visualize-column-color 100%);
        background-size: ((@column-width + @gutter-width) / @system-width) * @total-width;
        background-repeat: repeat;
	}
	.mixin;
}

.row(@columns: @columns) {	
	.mixin(@columns: @columns) when (ispixel(@total-width)) {
		width: @system-width;
		margin-left: @column-gutter-width * -1;
		}
	.mixin(@columns: @columns) when (ispercentage(@total-width)) {
		width: @total-width + @column-gutter-width-percentage;
		margin-left: @column-gutter-width-percentage * -1;
	}
	.mixin(@columns);
	.clearfix;
    overflow:hidden;
}

.column(@columns: @columns) {
	.mixin(@columns: @columns) when (ispixel(@total-width)) {
		margin-left: @column-gutter-width;
	}
	.mixin(@columns: @columns) when (ispercentage(@total-width)) {
		margin-left: @column-gutter-width-percentage;
	}
	.mixin(@columns);
    float: left;
}

.column-width(@x, @columns: @columns) {
	.mixin(@x, @columns: @columns) when (ispixel(@total-width)) {
		width: (((@column-width + @gutter-width) * @x) - @gutter-width) * 1px;
	}
	.mixin(@x, @columns: @columns) when (ispercentage(@total-width)) {
		width: ((((@column-width + @gutter-width) * @x) - @gutter-width) / @system-width) * @total-width;
	}
	.mixin(@x, @columns);
}

.column-height-equal(@y: 32767px) {
    padding-bottom: @y;
    margin-bottom: @y * -1;
}

.push(@offset: 1, @columns: @columns)  {
	.mixin(@offset: 1, @columns: @columns) when (ispixel(@total-width)) {
		margin-left: ((((@column-width + @gutter-width) * @offset) - @gutter-width) * 1px) + (@column-gutter-width * 2);
	}
	.mixin(@offset: 1, @columns: @columns) when (ispercentage(@total-width)) {
		margin-left: (((((@column-width + @gutter-width) * @offset) - @gutter-width) / @system-width) * @total-width) + (@column-gutter-width * 2);
	}
	.mixin(@offset, @columns);
}

.linear-gradient(@gradient) {
    background-image: -webkit-linear-gradient(@gradient);
    background-image:    -moz-linear-gradient(@gradient);
    background-image:     -ms-linear-gradient(@gradient);
    background-image:      -o-linear-gradient(@gradient);
    background-image:         linear-gradient(@gradient);
}

.clearfix() {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}
