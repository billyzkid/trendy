@grid-column-count:                     12;
@grid-column-width:                     60;
@grid-gutter-width:                     20;
@grid-debug:                            true;
@grid-debug-column-background:            rgba(0, 0, 0, 0.2);
@grid-debug-gutter-background:             rgba(0, 0, 0, 0.1);
@grid-debug-gutter-background-width:    @grid-gutter-width / (@grid-column-width + @grid-gutter-width) * 100%;
@grid-system-width:                     @grid-column-count * (@grid-column-width + @grid-gutter-width) * 1px;
@grid-total-width:                      @grid-system-width;

.debug("@grid-column-count: @{grid-column-count}\a@grid-column-width: @{grid-column-width}\a@grid-gutter-width: @{grid-gutter-width}\a@grid-debug: @{grid-debug}\a@grid-debug-column-background: @{grid-debug-column-background}\a@grid-debug-gutter-background: @{grid-debug-gutter-background}\a@grid-debug-gutter-background-width: @{grid-debug-gutter-background-width}\a@grid-system-width: @{grid-system-width}\a@grid-total-width: @{grid-total-width}");

.grid() {

    .mixin() when (@grid-debug) {
        .linear-gradient(left~"," @grid-debug-gutter-background 0%~"," @grid-debug-gutter-background @grid-debug-gutter-background-width~"," @grid-debug-column-background @grid-debug-gutter-background-width~"," @grid-debug-column-background 100%);
        background-size: (@grid-column-width + @grid-gutter-width) / @grid-system-width * @grid-total-width;
        background-position-x: @grid-gutter-width / @grid-system-width * @grid-total-width * -1;
        background-repeat: repeat;
    }

    .mixin;
    width: (@grid-column-count * (@grid-column-width + @grid-gutter-width) - @grid-gutter-width) / @grid-system-width * @grid-total-width;
    overflow: hidden;
}

.grid-row() {
    .clearfix;
    width: @grid-total-width;
    margin-left: @grid-gutter-width / @grid-system-width * @grid-total-width * -1;
    overflow: hidden;
}

.grid-column(@count: 1, @equal-height: false) {
    .grid-column(@count, 0, @equal-height);
}

.grid-column(@count: 1, @offset: 0, @equal-height: false) {
    
    .mixin1(@count) when (@count > 0) {
        width: (@count * (@grid-column-width + @grid-gutter-width) - @grid-gutter-width) / @grid-system-width * @grid-total-width;
        margin-left: @grid-gutter-width / @grid-system-width * @grid-total-width;
    }

    .mixin2(@offset) when (@offset > 0) {
        margin-left: ((@offset * (@grid-column-width + @grid-gutter-width) - @grid-gutter-width) / @grid-system-width * @grid-total-width) + (@grid-gutter-width / @grid-system-width * @grid-total-width * 2);
    }

    .mixin3(@equal-height) when (@equal-height) {
        padding-bottom: 99999px;
        margin-bottom: -99999px;
    }

    .mixin1(@count);
    .mixin2(@offset);
    .mixin3(@equal-height);

    float: left;
    overflow: hidden;
}

.linear-gradient(@gradient) {
    background-image: -webkit-linear-gradient(@gradient);
    background-image:    -moz-linear-gradient(@gradient);
    background-image:     -ms-linear-gradient(@gradient);
    background-image:      -o-linear-gradient(@gradient);
    background-image:         linear-gradient(@gradient);
}

.clearfix() {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

.debug(@var) {
    body:after {
        content: "@{var}";
        position: fixed;
        bottom: 8px;
        left: 8px;
        color: #f00;
        white-space: pre;
        background: rgba(255, 255, 255, 0.6);
        font-size: 12px;
        font-family: monospace;
        padding: 8px;
        border: 1px solid red;
        border-radius: 4px;
    }
}
